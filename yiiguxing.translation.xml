<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="580" />
    <option name="newTranslationDialogX" value="2783" />
    <option name="newTranslationDialogY" value="225" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Copilot" />
      <item value="indices" />
      <item value="  &#10;    Set the limit of rows for this scan. We will terminate the scan if the number of returned rows&#10;    reaches this value.&#10;    &lt;p&gt;&#10;    This condition will be tested at last, after all other conditions such as stopRow, filter, etc.&#10;    @param limit the limit of rows for this scan" />
      <item value="Aviator Evaluator" />
      <item value="Mutator Callback" />
      <item value="add Fuzzy Row Filter" />
      <item value="BALANCE" />
      <item value="BALANCE ERROR" />
      <item value="Assert" />
      <item value="PDM EMPTY COLUMN TYPE ERROR" />
      <item value="exist" />
      <item value="EXSIT" />
      <item value="sync" />
      <item value="create Multiset Table String" />
      <item value="transientable" />
      <item value="is Reserved Word" />
      <item value="check Not Empty Reserved Words" />
      <item value="get Indices" />
      <item value="LONGTEXT" />
      <item value="precision" />
      <item value="CLICKHOUSE" />
      <item value="truncate Table Async" />
      <item value="    Creates a new table with the specified number of regions.  The start key specified will become&#10;    the end key of the first region of the table, and the end key specified will become the start&#10;    key of the last region of the table (the first region has a null start key and the last region&#10;    has a null end key). BigInteger math will be used to divide the key range specified into enough&#10;    segments to make the required number of total regions. Synchronous operation.&#10;   &#10;    @param desc table descriptor for table&#10;    @param startKey beginning of key range&#10;    @param endKey end of key range&#10;    @param numRegions the total number of regions to create&#10;    @throws IllegalArgumentException if the table name is reserved&#10;    @throws org.apache.hadoop.hbase.MasterNotRunningException if master is not running&#10;    @throws org.apache.hadoop.hbase.TableExistsException if table already exists (If concurrent&#10;    threads, the table may have been created between " />
      <item value="    Return the list of attached co-processor represented&#10;   &#10;    @return The list of CoprocessorDescriptor" />
      <item value=" TableDescriptor contains the details about an HBase table such as the descriptors of&#10;  all the column families, is the table a catalog table, &lt;code&gt; hbase:meta &lt;code&gt;,&#10;  if the table is read only, the maximum size of the memstore,&#10;  when the region split should occur, coprocessors associated with it etc..." />
      <item value="PREFETCH BLOCKS ON OPEN" />
      <item value="COMPRESSION" />
      <item value="KEEP DELETED CELLS" />
      <item value="NEW VERSION BEHAVIOR" />
      <item value="EVICT BLOCKS ON CLOSE" />
      <item value="      A map which holds the configuration specific to the column family. The&#10;      keys of the map have the same names as config keys and override the&#10;      defaults with cf-specific settings. Example usage may be for compactions,&#10;      etc." />
      <item value="    Pattern that matches a coprocessor specification. Form is:&#10;    {@code &lt;coprocessor jar file location&gt; '|' &lt;class name&gt; ['|' &lt;priority&gt; ['|' &lt;arguments&gt;]]}&#10;    where arguments are {@code &lt;KEY&gt; '=' &lt;VALUE&gt; [,...]}&#10;    For example: {@code hdfs:foo.jar|com.foo.FooRegionObserver|1001|arg1=1,arg2=2}" />
      <item value="   Used by HBase Shell interface to access this metadata&#10;    attribute which denotes the maximum size of the store file after which a&#10;    region split occurs." />
      <item value="  Annotation to inform users of a package, class or method's intended audience.&#10;  Currently the audience can be {@link Public}, {@link LimitedPrivate} or&#10;  {@link Private}. &lt;br&gt;&#10;  All public classes must have InterfaceAudience annotation. &lt;br&gt;&#10;  &lt;ul&gt;&#10;  &lt;li&gt;Public classes that are not marked with this annotation must be&#10;  considered by default as {@link Private}.&lt;li&gt;&#10; &#10;  &lt;li&gt;External applications must only use classes that are marked&#10;  {@link Public}. Avoid using non public classes as these classes&#10;  could be removed or change in incompatible ways.&lt;li&gt;&#10; &#10;  &lt;li&gt;Some projects may choose to give special consideration to related&#10;  projects. Such consideration can be done by using the {@link LimitedPrivate}&#10;  annotation with a named set of projects.&lt;li&gt;&#10; &#10;  &lt;li&gt; Methods may have a different annotation that it is more restrictive&#10;  compared to the audience classification of the class. Example: A class&#10;  might be {@link Public}, but a method may be {@link LimitedPrivate}&#10;  &lt;li&gt;&lt;ul&gt;" />
      <item value="      Causes the current thread to wait, if necessary, until the&#10;      process represented by this {@code Process} object has&#10;      terminated, or the specified waiting time elapses.&#10;     &#10;      &lt;p&gt;If the process has already terminated then this method returns&#10;      immediately with the value {@code true}.  If the process has not&#10;      terminated and the timeout value is less than, or equal to, zero, then&#10;      this method returns immediately with the value {@code false}.&#10;     &#10;      &lt;p&gt;The default implementation of this methods polls the {@code exitValue}&#10;      to check if the process has terminated. Concrete implementations of this&#10;      class are strongly encouraged to override this method with a more&#10;      efficient implementation.&#10;     &#10;      @param timeout the maximum time to wait&#10;      @param unit the time unit of the {@code timeout} argument" />
      <item value="needs Escaping" />
      <item value="count Leading Backslash" />
      <item value="      Constructs a process builder with the specified operating&#10;      system program and arguments.  This constructor does &lt;i&gt;not&lt;i&gt;&#10;      make a copy of the {@code command} list.  Subsequent&#10;      updates to the list will be reflected in the state of the&#10;      process builder.  It is not checked whether&#10;      {@code command} corresponds to a valid operating system&#10;      command." />
      <item value="      Add a listener to the configuration, after the server modified the configuration, the client will use the&#10;      incoming listener callback. Recommended asynchronous processing, the application can implement the getExecutor&#10;      method in the ManagerListener, provide a thread pool of execution. If provided, use the main thread callback, May&#10;      block other configurations or be blocked by other configurations." />
      <item value="  Represents a predicate (boolean-valued function) of one argument.&#10; &#10;  &lt;p&gt;This is a &lt;a href=&quot;package-summary.html&quot;&gt;functional interface&lt;a&gt;&#10;  whose functional method is {@link test(Object)}.&#10; &#10;  @param &lt;T&gt; the type of the input to the predicate" />
      <item value="      Evaluates this predicate on the given argument.&#10;     &#10;      @param t the input argument&#10;      @return {@code true} if the input argument matches the predicate,&#10;      otherwise {@code false}" />
      <item value="Predicate" />
      <item value="compute If Absent" />
      <item value="fkey Constraints" />
      <item value="unique Consts" />
      <item value="Reverse" />
      <item value="    Returns the {@code int} value that is equal to {@code value}, if possible.&#10;   &#10;    @param value any value in the range of the {@code int} type&#10;    @return the {@code int} value that equals {@code value}&#10;    @throws IllegalArgumentException if {@code value} is greater than {@link IntegerMAX_VALUE} or&#10;        less than {@link IntegerMIN_VALUE}" />
      <item value="  Static utility methods pertaining to {@code int} primitives, that are not already found in either&#10;  {@link Integer} or {@link Arrays}.&#10; &#10;  &lt;p&gt;See the Guava User Guide article on &lt;a&#10;  href=&quot;https:github.comgoogleguavawikiPrimitivesExplained&quot;&gt;primitive utilities&lt;a&gt;." />
      <item value="      Convert a string to the Java literal and enclose it with double quotes.&#10;      Null will result in &quot;null&quot; (without double quotes)." />
      <item value="&#9;  Check if is a dialect reserved word of ANSI-SQL reserved word&#10;&#9;  &#10;&#9;  @return false:not reserved word. true:reserved by dialect or ANSI-SQL" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="747" />
        <entry key="ENGLISH" value="748" />
        <entry key="ESTONIAN" value="1" />
        <entry key="GERMAN" value="4" />
        <entry key="FRENCH" value="4" />
        <entry key="FILIPINO" value="5" />
        <entry key="DUTCH" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="SCOTS_GAELIC" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="7" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1693051790700" />
  </component>
  <component name="Settings">
    <option name="autoReplace" value="true" />
    <option name="autoSelectionMode" value="EXCLUSIVE" />
    <option name="foldOriginal" value="true" />
    <option name="keepFormat" value="true" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Cambria" />
    <option name="primaryFontFamily" value="DialogInput" />
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="512e876ddd7d2c77" />
      </youdao-translate>
    </option>
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1699166180135" />
  </component>
  <component name="Translation.Settings">
    <option name="translator" value="MICROSOFT" />
  </component>
  <component name="Translation.States">
    <option name="newTranslationDialogWidth" value="596" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="340" />
    <histories>
      <item value="Deque" />
      <item value="Concurrent Linked Deque" />
      <item value="Concurrent Linked Queue" />
      <item value="An optionally-bounded blocking deque based on linked nodes. The optional capacity bound constructor argument serves as a way to prevent excessive expansion. The capacity, if unspecified, is equal to Integer.MAX_VALUE. Linked nodes are dynamically created upon each insertion unless this would bring the deque above capacity. Most operations run in constant time (ignoring time spent blocking). Exceptions include remove, removeFirstOccurrence, removeLastOccurrence, contains, iterator.remove(), and the bulk operations, all of which run in linear time. This class and its iterator implement all of the optional methods of the Collection and Iterator interfaces. This class is a member of the Java Collections Framework." />
      <item value="Linked Blocking Deque" />
      <item value="An optionally-bounded blocking deque based on linked nodes. The optional capacity bound constructor argument serves as a way to prevent excessive expansion. The capacity, if unspecified, is equal to Integer.MAX_VALUE. Linked nodes are dynamically created upon each insertion unless this would bring the deque above capacity. Most operations run in constant time (ignoring time spent blocking). Exceptions include remove, removeFirstOccurrence, removeLastOccurrence, contains, iterator.remove(), and the bulk operations, all of which run in linear time. This class and its iterator implement all of the optional methods of the Collection and Iterator interfaces." />
      <item value="A queue which forwards all its method calls to another queue. Subclasses should override one or more methods to modify the behavior of the backing queue as desired per the decorator pattern . Warning: The methods of ForwardingQueue forward indiscriminately to the methods of the delegate. For example, overriding add alone will not change the behavior of offer which can lead to unexpected behavior. In this case, you should override offer as well, either providing your own implementation, or delegating to the provided standardOffer method. default method warning: This class does not forward calls to default methods. Instead, it inherits their default implementations. When those implementations invoke methods, they invoke methods on the ForwardingQueue. The standard methods are not guaranteed to be thread-safe, even when all of the methods that they depend on are thread-safe." />
      <item value="Retrieves, but does not remove, the head of this queue, or returns null if this queue is empty. Returns: the head of this queue, or null if this queue is empt" />
      <item value="If the specified key is not already associated with a value, attempts to compute its value using the given mapping function and enters it into this map unless null. The entire method invocation is performed atomically, so the function is applied at most once per key. Some attempted update operations on this map by other threads may be blocked while computation is in progress, so the computation should be short and simple, and must not attempt to update any other mappings of this map." />
      <item value="Evicting Queue" />
      <item value="compute If Absent" />
      <item value="relative" />
      <item value="relative Field" />
      <item value="strategys" />
      <item value="AFUNIX Datagram Socket" />
      <item value="– when the number of threads is greater than the core, this is the maximum time that excess idle threads will wait for new tasks before terminating." />
      <item value="excludes" />
      <item value="process Inactivate Tasks" />
      <item value="STOPPED" />
      <item value="canonical" />
      <item value="Client Http Request Factory Supplier" />
      <item value="Get config and register Listener. If you want to pull it yourself when the program starts to get the configuration for the first time, and the registered Listener is used for future configuration updates, you can keep the original code unchanged, just add the system parameter: enableRemoteSyncConfig = &quot;true&quot; ( But there is network overhead); therefore we recommend that you use this interface directly" />
      <item value="&quot;Acquires&quot; and returns the FileDescriptor for this impl A corresponding releaseFD is required to &quot;release&quot; the FileDescriptor." />
      <item value="The workhorse of the connection operation. Tries several times to establish a connection to the given &lt;host, port&gt;. If unsuccessful, throws an IOException indicating what went wrong." />
      <item value="volatile" />
      <item value="is Running" />
      <item value="Number of milliseconds to delay before the first execution of a fixedRate or fixedDelay task. Returns: the initial delay in milliseconds" />
      <item value="Number of milliseconds to delay before the first execution of a fixedRate or fixedDelay task. Returns: the initial delay in milliseconds as a String value, e.g. a placeholder or a java.time.Duration compliant value" />
      <item value="cute the annotated method with a fixed period in milliseconds between the end of the last invocation and the start of the next. Returns: the delay in milliseconds" />
      <item value="Abort Policy" />
      <item value="Synchronous Queue" />
      <item value="@Order defines the sort order for an annotated component. The value is optional and represents an order value as defined in the Ordered interface. Lower values have higher priority. The default value is Ordered.LOWEST_PRECEDENCE, indicating lowest priority (losing to any other specified order value). NOTE: Since Spring 4.0, annotation-based ordering is supported for many kinds of components in Spring, even for collection injection where the order values of the target components are taken into account (either from their target class or from their @Bean method). While such order values may influence priorities at injection points, please be aware that they do not influence singleton startup order which is an orthogonal concern determined by dependency relationships and @DependsOn declarations (influencing a runtime-determined dependency graph). Since Spring 4.1, the standard javax.annotation.Priority annotation can be used as a drop-in replacement for this annotation in ordering scenarios. Note that @Priority may have additional semantics when a single element has to be picked (see AnnotationAwareOrderComparator.getPriority). Alternatively, order values may also be determined on a per-instance basis through the Ordered interface, allowing for configuration-determined instance values instead of hard-coded values attached to a particular class." />
      <item value="{@link ApplicationContextInitializer} that writes the {@link ConditionEvaluationReport} to the log. Reports are logged at the {@link LogLevelDEBUG DEBUG} level. A crash report triggers an info output suggesting the user runs again with debug enabled to display the report. &lt;p&gt; This initializer is not intended to be shared across multiple application context instances." />
      <item value="Marks this thread as either a {@linkplain isDaemon daemon} thread or a user thread. The Java Virtual Machine exits when the only threads running are all daemon threads. &lt;p&gt; This method must be invoked before the thread is started. @param on if {@code true}, marks this thread as a daemon thread @throws IllegalThreadStateException if this thread is {@linkplain isAlive alive} @throws SecurityException if {@link checkAccess} determines that the current thread cannot modify this thread" />
      <item value="Allows customizing the response after the execution of an @ResponseBody or a ResponseEntity controller method but before the body is written with an HttpMessageConverter. Implementations may be registered directly with RequestMappingHandlerAdapter and ExceptionHandlerExceptionResolver or more likely annotated with @ControllerAdvice in which case they will be auto-detected by both." />
      <item value="Combine &quot;this&quot; request mapping info (i.e. the current instance) with another request mapping info instance. Example: combine type- and method-level request mappings. Returns: a new request mapping info instance; never null" />
      <item value="Official" />
      <item value="OFFICIAL" />
      <item value="generate Offical" />
      <item value="Applyed T" />
      <item value="trial" />
      <item value="tolerable" />
      <item value="Get the baseboard manufacturer. Returns: The manufacturer." />
      <item value="Get the baseboard serial number. Returns: The serial number." />
      <item value="Get the computer system baseboardmotherboard. Returns: A Baseboard object for this system" />
      <item value="Get the computer system serial number, if available. Performs a best-effort attempt to retrieve a unique serial number from the computer system. This may originate from the baseboard, BIOS, processor, etc. This value is provided for information only. Caution should be exercised if using this result to &quot;fingerprint&quot; a system for licensing or other purposes, as the result may change based on program permissions or installation of software packages. Specifically, on Linux and FreeBSD, this requires either root permissions, or installation of the (deprecated) HAL library (lshal command). Linux also attempts to read the dmiid serial number files in sysfs, which are read-only root by default but may have permissions altered by the user. Returns: the System Serial Number, if available, otherwise returns &quot;unknown" />
      <item value="Instantiates a ComputerSystem object. This represents the physical hardware, including components such as BIOSFirmware and a motherboard, logic board, etc." />
      <item value="duration" />
      <item value="A group of mutually exclusive options." />
      <item value="Main entry-point into the library. Options represents a collection of Option objects, which describe the possible options for a command-line. It may flexibly parse long and short options, with or without values. Additionally, it may parse only a portion of a commandline, allowing for flexible multi-stage parsing." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="310" />
        <entry key="CROATIAN" value="1" />
        <entry key="ENGLISH" value="310" />
        <entry key="FRENCH" value="4" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="SESOTHO" value="1" />
        <entry key="SPANISH" value="1" />
      </map>
    </option>
  </component>
</application>