<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="582" />
    <option name="newTranslationDialogX" value="2783" />
    <option name="newTranslationDialogY" value="225" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="fisok" />
      <item value="mandatory" />
      <item value="precision" />
      <item value="GLUE GROOVY" />
      <item value="SERIAL EXECUTION" />
      <item value="SHARDING BROADCAST" />
      <item value="set Filter Processes Url" />
      <item value="守护进程" />
      <item value="Deamon ON" />
      <item value="ON" />
      <item value="是否守护" />
      <item value="download Probe Install Conf" />
      <item value="send Async" />
      <item value="get Credentials" />
      <item value="retrieve User" />
      <item value="      Constructs a new, empty tree set, sorted according to the&#10;      natural ordering of its elements.  All elements inserted into&#10;      the set must implement the {@link Comparable} interface.&#10;      Furthermore, all such elements must be &lt;i&gt;mutually&#10;      comparable&lt;i&gt;: {@code e1.compareTo(e2)} must not throw a&#10;      {@code ClassCastException} for any elements {@code e1} and&#10;      {@code e2} in the set.  If the user attempts to add an element&#10;      to the set that violates this constraint (for example, the user&#10;      attempts to add a string element to a set whose elements are&#10;      integers), the {@code add} call will throw a&#10;      {@code ClassCastException}." />
      <item value="      Returns an array of strings naming the files and directories in the&#10;      directory denoted by this abstract pathname.&#10;     &#10;      &lt;p&gt; If this abstract pathname does not denote a directory, then this&#10;      method returns {@code null}.  Otherwise an array of strings is&#10;      returned, one for each file or directory in the directory.  Names&#10;      denoting the directory itself and the directory's parent directory are&#10;      not included in the result.  Each string is a file name rather than a&#10;      complete path.&#10;     &#10;      &lt;p&gt; There is no guarantee that the name strings in the resulting array&#10;      will appear in any specific order; they are not, in particular,&#10;      guaranteed to appear in alphabetical order.&#10;     &#10;      &lt;p&gt; Note that the {@link java.nio.file.Files} class defines the {@link&#10;      java.nio.file.FilesnewDirectoryStream(Path) newDirectoryStream} method to&#10;      open a directory and iterate over the names of the files in the directory.&#10;      This may use less resources when working with very large directories, and&#10;      may be more responsive when working with remote directories." />
      <item value="ceil" />
      <item value="second" />
      <item value="multiply" />
      <item value="分钟" />
      <item value="capture" />
      <item value="orginal" />
      <item value="Compatible Service" />
      <item value="read From Source When No Replicas Original" />
      <item value="enumerate String Properties" />
      <item value="prevails" />
      <item value="get Exact File Name" />
      <item value="has Successed" />
      <item value="the identity value for the accumulating function" />
      <item value="task Progress Probe" />
      <item value="get And Decrement" />
      <item value="accumulate" />
      <item value="accumulate And Get" />
      <item value="Signal Chart Service" />
      <item value="remove Inactive Tasks" />
      <item value="Signal Chart Controller" />
      <item value="DASHBOARD" />
      <item value="assign Table Alias" />
      <item value="extra Dataset Id" />
      <item value="fit Page Size" />
      <item value="Page" />
      <item value="    &#10;      Performs the given action for each remaining element until all elements&#10;      have been processed or the action throws an exception.  Actions are&#10;      performed in the order of iteration, if that order is specified.&#10;      Exceptions thrown by the action are relayed to the caller.&#10;      &lt;p&gt;&#10;      The behavior of an iterator is unspecified if the action modifies the&#10;      collection in any way (even by calling the {@link remove remove} method&#10;      or other mutator methods of {@code Iterator} subtypes),&#10;      unless an overriding class has specified a concurrent modification policy.&#10;      &lt;p&gt;&#10;      Subsequent behavior of an iterator is unspecified if the action throws an&#10;      exception.&#10;     &#10;      @implSpec&#10;      &lt;p&gt;The default implementation behaves as if:&#10;      &lt;pre&gt;{@code&#10;          while (hasNext())&#10;              action.accept(next());&#10;      }&lt;pre&gt;&#10;     " />
      <item value="     Inserts the specified element at the specified position in this list&#10;      (optional operation).  Shifts the element currently at that position&#10;      (if any) and any subsequent elements to the right (adds one to their&#10;      indices).&#10;     &#10;      @param index index at which the specified element is to be inserted&#10;      @param element element to be inserted&#10;      @throws UnsupportedOperationException if the {@code add} operation&#10;              is not supported by this list&#10;      @throws ClassCastException if the class of the specified element&#10;              prevents it from being added to this list&#10;      @throws NullPointerException if the specified element is null and&#10;              this list does not permit null elements&#10;      @throws IllegalArgumentException if some property of the specified&#10;              element prevents it from being added to this list&#10;      @throws IndexOutOfBoundsException if the index is out of range&#10;              ({@code index &lt; 0 || index &gt; size()})" />
      <item value="orig Column Indexs" />
      <item value="orign" />
      <item value="tranform Value" />
      <item value="volatile" />
      <item value="get Request Column Restrict Name" />
      <item value="metadata Complex" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="747" />
        <entry key="ENGLISH" value="748" />
        <entry key="ESTONIAN" value="1" />
        <entry key="GERMAN" value="4" />
        <entry key="FRENCH" value="4" />
        <entry key="FILIPINO" value="5" />
        <entry key="DUTCH" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="SCOTS_GAELIC" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="7" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1681695560693" />
  </component>
  <component name="Settings">
    <option name="autoReplace" value="true" />
    <option name="autoSelectionMode" value="EXCLUSIVE" />
    <option name="foldOriginal" value="true" />
    <option name="keepFormat" value="true" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Cambria" />
    <option name="primaryFontFamily" value="DialogInput" />
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="512e876ddd7d2c77" />
      </youdao-translate>
    </option>
  </component>
</application>