<application>
  <component name="AppStorage">
    <histories>
      <item value="for Each Byte Asc 0" />
      <item value="Get numElements out of the CodecOutputList and forward these through the pipeline." />
      <item value="fire Channel Read" />
      <item value="Returns:&#10;true if the processor wants to continue the loop and handle the next byte in the buffer. false if the processor wants to stop handling bytes and abort the loop." />
      <item value=" In case of decoding a request we will just continue processing and header validation&#10;                     is done in the DefaultHttpHeaders implementation.&#10;                    &#10;                     In the case of decoding a response we will &quot;skip&quot; the whitespace." />
      <item value="       No whitespace is allowed between the header field-name and colon. In&#10;             the past, differences in the handling of such whitespace have led to&#10;             security vulnerabilities in request routing and response handling. A&#10;             server MUST reject any received request message that contains&#10;             whitespace between a header field-name and colon with a response code&#10;             of 400 (Bad Request). A proxy MUST remove any such whitespace from a&#10;             response message before forwarding the message downstream." />
      <item value="We return here, this forces decode to be called again where we will decode the content" />
      <item value="Iterates over the readable bytes of this buffer with the specified processor in ascending order.&#10;Returns:&#10;-1 if the processor iterated to or beyond the end of the readable bytes. The last-visited index If the ByteProcessor.process(byte) returned false." />
      <item value="colon" />
      <item value="Strip Prefix" />
      <item value="combine Predicates" />
      <item value="Returns a view of the portion of this map whose keys are greater than or equal to fromKey. The returned map is backed by this map, so changes in the returned map are reflected in this map, and vice-versa. The returned map supports all optional map operations that this map supports.&#10;The returned map will throw an IllegalArgumentException on an attempt to insert a key outside its range.&#10;Params:&#10;fromKey – low endpoint (inclusive) of the keys in the returned map&#10;Returns:&#10;a view of the portion of this map whose keys are greater than or equal to fromKey&#10;Throws:&#10;ClassCastException – if fromKey is not compatible with this map's comparator (or, if the map has no comparator, if fromKey does not implement Comparable). Implementations may, but are not required to, throw this exception if fromKey cannot be compared to keys currently in the map.&#10;NullPointerException – if fromKey is null and this map does not permit null keys&#10;IllegalArgumentException – if this map itself has a restricted range, and fromKey lies outside the bounds of the range" />
      <item value="The prefix of the properties that are valid to bind to this object. Synonym for prefix(). A valid prefix is defined by one or more words separated with dots (e.g. &quot;acme.system.feature&quot;).&#10;Returns:&#10;the prefix of the properties to bind" />
      <item value="validate" />
      <item value="Initialize the given BeanWrapper with the custom editors registered with this factory. To be called for BeanWrappers that will create and populate bean instances.&#10;The default implementation delegates to registerCustomEditors. Can be overridden in subclasses.&#10;Params:&#10;bw – the BeanWrapper to initialize" />
      <item value="This annotation has been deprecated as of the 3.0.1 release.&#10;  &lt;code&gt;@EnableDiscoveryClient&lt;code&gt; is no longer needed, discovery client&#10;  implementations are enabled as long as an implementation is on the classpath.&#10;  &lt;code&gt;@EnableCircuitBreaker&lt;code&gt; is no longer used now that Hystrix has been removed&#10;  from Spring Cloud." />
      <item value="iptv hash consistency VIDEO FILE" />
      <item value="deflate" />
      <item value="fetch Cover Pic" />
      <item value="fetch" />
      <item value="F Fmpeg Frame Grabber" />
      <item value="nnotation which indicates that a method parameter should be bound to a web request parameter.&#10;Supported for annotated handler methods in Spring MVC and Spring WebFlux as follows:&#10;In Spring MVC, &quot;request parameters&quot; map to query parameters, form data, and parts in multipart requests. This is because the Servlet API combines query parameters and form data into a single map called &quot;parameters&quot;, and that includes automatic parsing of the request body.&#10;In Spring WebFlux, &quot;request parameters&quot; map to query parameters only. To work with all 3, query, form data, and multipart data, you can use data binding to a command object annotated with ModelAttribute.&#10;If the method parameter type is Map and a request parameter name is specified, then the request parameter value is converted to a Map assuming an appropriate conversion strategy is available.&#10;If the method parameter is Map&lt;String, String&gt; or MultiValueMap&lt;String, String&gt; and a parameter name is not specified, then the map parameter is populated with all request parameter names" />
      <item value="Compares this date-time to another date-time.&#10;The comparison is primarily based on the date-time, from earliest to latest. It is &quot;consistent with equals&quot;, as defined by Comparable.&#10;If all the date-times being compared are instances of LocalDateTime, then the comparison will be entirely based on the date-time. If some dates being compared are in different chronologies, then the chronology is also considered, see ChronoLocalDateTime.compareTo.&#10;Params:&#10;other – the other date-time to compare to, not null&#10;Returns:&#10;the comparator value, negative if less, positive if greater" />
      <item value="content" />
      <item value="restore" />
      <item value="actions Collector" />
      <item value="Returns the smallest (closest to negative infinity) double value that is greater than or equal to the argument and is equal to a mathematical integer. Special cases:&#10;If the argument value is already equal to a mathematical integer, then the result is the same as the argument.&#10;If the argument is NaN or an infinity or positive zero or negative zero, then the result is the same as the argument.&#10;If the argument value is less than zero but greater than -1.0, then the result is negative zero.&#10;Note that the value of Math.ceil(x) is exactly the value of -Math.floor(-x).&#10;Params:&#10;a – a value.&#10;Returns:&#10;the smallest (closest to negative infinity) floating-point value that is greater than or equal to the argument and is equal to a mathematical integer." />
      <item value="ceil" />
      <item value="floor" />
      <item value="Unit that represents the concept of a millisecond. For the ISO calendar system, it is equal to the 1000th part of the second u" />
      <item value="Obtains a Duration representing the duration between two temporal objects.&#10;This calculates the duration between two temporal objects. If the objects are of different types, then the duration is calculated based on the type of the first object. For example, if the first argument is a LocalTime then the second argument is converted to a LocalTime.&#10;The specified temporal objects must support the SECONDS unit. For full accuracy, either the NANOS unit or the NANO_OF_SECOND field should be supported.&#10;The result of this method can be a negative period if the end is before the start. To guarantee to obtain a positive duration call abs() on the result.&#10;Params:&#10;startInclusive – the start instant, inclusive, not null&#10;endExclusive – the end instant, exclusive, not null" />
      <item value="Temporal" />
      <item value="Msg Producer" />
      <item value="invalid Stream Id Counter" />
      <item value="image Crc Counter" />
      <item value="audio Crc Suc Counter" />
      <item value="invalid Stream Id Conuter" />
      <item value="finger Conutor" />
      <item value="finger Conuter" />
      <item value="execution" />
      <item value="sub Fix" />
      <item value="alarm Check" />
      <item value="notice Source Alarm" />
      <item value="negative" />
      <item value="Checksum State Enum" />
      <item value="  JSON Message converter - {@code Bytes} on output, String, Bytes, or byte[] on input.&#10;  Used in conjunction with Kafka&#10;  {@code BytesSerializer(BytesDeserializer, ByteArrayDeserializer, or StringDeserializer)}.&#10;  More efficient than {@link StringJsonMessageConverter} because the&#10;  {@code String&lt;-&gt;byte[]} conversion is avoided.&#10; &#10;  @author Gary Russell" />
      <item value="  JSON Message converter - {@code byte[]} on output, String, Bytes, or byte[] on input.&#10;  Used in conjunction with Kafka&#10;  {@code ByteArraySerializer(ByteArrayDeserializer, BytesDeserializer, or StringDeserializer)}.&#10;  More efficient than {@link StringJsonMessageConverter} because the&#10;  {@code String&lt;-&gt;byte[]} conversion is avoided." />
      <item value="      Overridable method that determines {@link SerializationFeature} that is used as&#10;      the global default in determining if datetime value serialized should use numeric&#10;      format (&quot;timestamp&quot;) or not.&#10;     &lt;p&gt;&#10;      Note that this feature is just the baseline setting and may be overridden on per-type&#10;      or per-property basis." />
      <item value="accpet" />
      <item value="      Constructs an empty array deque with an initial capacity&#10;      sufficient to hold the specified number of elements.&#10;     &#10;      @param numElements lower bound on initial capacity of the deque" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="732" />
        <entry key="ENGLISH" value="733" />
        <entry key="ESTONIAN" value="1" />
        <entry key="GERMAN" value="4" />
        <entry key="FRENCH" value="4" />
        <entry key="FILIPINO" value="5" />
        <entry key="DUTCH" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="SCOTS_GAELIC" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="7" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1663414120938" />
  </component>
  <component name="Settings">
    <option name="autoReplace" value="true" />
    <option name="foldOriginal" value="true" />
    <option name="keepFormat" value="true" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Cambria" />
    <option name="primaryFontFamily" value="DialogInput" />
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="512e876ddd7d2c77" />
      </youdao-translate>
    </option>
  </component>
</application>