<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="584" />
    <option name="newTranslationDialogX" value="2783" />
    <option name="newTranslationDialogY" value="225" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="mock New Task" />
      <item value="external" />
      <item value="internal" />
      <item value="pcap" />
      <item value="operator" />
      <item value="peer&#10;" />
      <item value="peer" />
      <item value="prevent duplicates" />
      <item value="Context Refreshed Event" />
      <item value="collapse" />
      <item value="Options" />
      <item value="Event" />
      <item value="suffix" />
      <item value="gather" />
      <item value="align" />
      <item value="emit" />
      <item value="Edge Server Metrics" />
      <item value="远程文件" />
      <item value="Origin File" />
      <item value="      Creates a URI by parsing the given string.&#10;     &#10;      &lt;p&gt; This convenience factory method works as if by invoking the {@link&#10;      URI(String)} constructor; any {@link URISyntaxException} thrown by the&#10;      constructor is caught and wrapped in a new {@link&#10;      IllegalArgumentException} object, which is then thrown.&#10;     &#10;      &lt;p&gt; This method is provided for use in situations where it is known that&#10;      the given string is a legal URI, for example for URI constants declared&#10;      within in a program, and so it would be considered a programming error&#10;      for the string not to parse as such.  The constructors, which throw&#10;      {@link URISyntaxException} directly, should be used situations where a&#10;      URI is being constructed from user input or from some other source that&#10;      may be prone to errors.  &lt;p&gt;&#10;     " />
      <item value="  Properties to be used in configuring a {@link MultipartConfigElement}.&#10;  &lt;ul&gt;&#10;  &lt;li&gt;{@link getLocation() location} specifies the directory where uploaded files will&#10;  be stored. When not specified, a temporary directory will be used.&lt;li&gt;&#10;  &lt;li&gt;{@link getMaxFileSize() max-file-size} specifies the maximum size permitted for&#10;  uploaded files. The default is 1MB&lt;li&gt;&#10;  &lt;li&gt;{@link getMaxRequestSize() max-request-size} specifies the maximum size allowed&#10;  for {@literal multipartform-data} requests. The default is 10MB.&lt;li&gt;&#10;  &lt;li&gt;{@link getFileSizeThreshold() file-size-threshold} specifies the size threshold&#10;  after which files will be written to disk. The default is 0.&lt;li&gt;&#10;  &lt;ul&gt;&#10;  &lt;p&gt;&#10;  These properties are ultimately passed to {@link MultipartConfigFactory} which means&#10;  you may specify numeric values using {@literal long} values or using more readable&#10;  {@link DataSize} variants." />
      <item value="green" />
      <item value="reactive" />
      <item value="folding" />
      <item value="emits" />
      <item value="&lt;!--                    &lt;vx-button content=&quot;部署站点&quot;  @click=&quot;installEdgeEvent(record)&quot;&gt;--&gt;&#10;&lt;!--                    &lt;vx-button content=&quot;部署探针&quot;  @click=&quot;installEdgeEvent(record)&quot;&gt;--&gt;&#10;&lt;!--                    &lt;vx-button content=&quot;资源监控&quot;  @click=&quot;installEdgeEvent(record)&quot;&gt;--&gt;&#10;&lt;!--                    &lt;vx-button content=&quot;探针监控&quot;  @click=&quot;installEdgeEvent(record)&quot;&gt;--&gt;&#10;&lt;!--                    &lt;vx-button content=&quot;重启&quot;  @click=&quot;installEdgeEvent(record)&quot;&gt;--&gt;&#10;&lt;!--                    &lt;vx-button content=&quot;停止&quot;  @click=&quot;installEdgeEvent(record)&quot;&gt;--&gt;" />
      <item value="slots" />
      <item value="grid Data" />
      <item value="grid" />
      <item value="modal" />
      <item value="downstream Rate" />
      <item value="Loadavg" />
      <item value="system Loadavg" />
      <item value="direct instantiation" />
      <item value="offline" />
      <item value=" If instance is ephemeral." />
      <item value="Unified" />
      <item value="&#9;  To be used by custom operators: invokes assembly {@link Hooks} pointcut given a&#10;&#9;  {@link Mono}, potentially returning a new {@link Mono}. This is for example useful&#10;&#9;  to activate cross-cutting concerns at assembly time, eg. a generalized&#10;&#9;  {@link checkpoint()}.&#10;&#9; &#10;&#9;  @param &lt;T&gt; the value type&#10;&#9;  @param source the source to apply assembly hooks onto&#10;&#9; &#10;&#9;  @return the source, potentially wrapped with assembly time cross-cutting behavior" />
      <item value="A micro API for stream fusion, in particular marks producers that support a {@link QueueSubscription}." />
      <item value="indicator Relative Set" />
      <item value="      Removes the mapping for the specified key from this map if present.&#10;     &#10;      @param  key key whose mapping is to be removed from the map&#10;      @return the previous value associated with {@code key}, or&#10;              {@code null} if there was no mapping for {@code key}.&#10;              (A {@code null} return can also indicate that the map&#10;              previously associated {@code null} with {@code key}.)" />
      <item value="permit" />
      <item value="incompatible" />
      <item value="indicator" />
      <item value="Context" />
      <item value="Format" />
      <item value="&#9;  Allows setting the value of &lt;code&gt;hint&lt;code&gt; that is passed on to the LoadBalancer&#10;&#9;  request and can subsequently be used in {@link ReactiveLoadBalancer}&#10;&#9;  implementations." />
      <item value="recent" />
      <item value="Unsatisfied" />
      <item value="      Returns {@code true} if and only if the system property named&#10;      by the argument exists and is equal to, ignoring case, the&#10;      string {@code &quot;true&quot;}.&#10;      A system property is accessible through {@code getProperty}, a&#10;      method defined by the {@code System} class.  &lt;p&gt; If there is no&#10;      property with the specified name, or if the specified name is&#10;      empty or null, then {@code false} is returned." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="747" />
        <entry key="ENGLISH" value="748" />
        <entry key="ESTONIAN" value="1" />
        <entry key="GERMAN" value="4" />
        <entry key="FRENCH" value="4" />
        <entry key="FILIPINO" value="5" />
        <entry key="DUTCH" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="SCOTS_GAELIC" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="7" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1677464099377" />
  </component>
  <component name="Settings">
    <option name="autoReplace" value="true" />
    <option name="autoSelectionMode" value="EXCLUSIVE" />
    <option name="foldOriginal" value="true" />
    <option name="keepFormat" value="true" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Cambria" />
    <option name="primaryFontFamily" value="DialogInput" />
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="512e876ddd7d2c77" />
      </youdao-translate>
    </option>
  </component>
</application>