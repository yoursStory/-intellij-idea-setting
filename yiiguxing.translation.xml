<application>
  <component name="AppStorage">
    <histories>
      <item value="    &#10;      Updates interface network statistics on this interface. Statistics include&#10;      packets and bytes sent and received, and interface speed.&#10;     &#10;      @return {@code true} if the update was successful, {@code false} otherwise.&#10;     " />
      <item value="      Instantiates a list of {@link LogicalVolumeGroup} objects, representing a&#10;      storage pool or group of devices, partitions, volumes, or other&#10;      implementation specific means of file storage.&#10;      &lt;p&gt;&#10;      If not yet implemented or if logical volume groups do not exist, returns an&#10;      empty list.&#10;      &lt;p&gt;&#10;      Currently implemented for Linux (LVM2), macOS (Core Storage), and Windows&#10;      (Storage Spaces).&#10;     &#10;      @return A list of {@link LogicalVolumeGroup} objects or an empty list if none&#10;              are present." />
      <item value="      Gets a list of non-local {@link NetworkIF} objects, representing a network&#10;      interface. The list excludes local interfaces.&#10;     &#10;      @return A list of {@link NetworkIF} objects representing the interfaces" />
      <item value="      Gets a list {@link NetworkIF} objects, representing a network interface.&#10;     &#10;      @param includeLocalInterfaces&#10;                 whether to include local interfaces (loopback or no hardware&#10;                 address) in the result&#10;      @return A list of {@link NetworkIF} objects representing the interfaces" />
      <item value="      Instantiates a {@link oshi.hardware.Sensors} object, representing CPU&#10;      temperature and fan speed.&#10;     &#10;      @return A Sensors object" />
      <item value="      Instantiates a list of {@link oshi.hardware.SoundCard} objects, representing&#10;      the Sound cards.&#10;     &#10;      @return A list of SoundCard objects or an empty list if none are present." />
      <item value="      Retrieves the Video RAM (VRAM) available on the GPU&#10;     &#10;      @return Total number of bytes." />
      <item value="      Instantiates a list of {@link oshi.hardware.GraphicsCard} objects,&#10;      representing the Graphics cards.&#10;     &#10;      @return A list of objects or an empty list if none are present." />
      <item value="Microarchitecture" />
      <item value="   Create a new instance of {@link SystemInfo}. This is the main entry point to&#10;      OSHI and provides access to cross-platform code.&#10;      &lt;p&gt;&#10;      Platform-specific Hardware and Software objects are retrieved via memoized&#10;      suppliers. To conserve memory at the cost of additional processing time,&#10;      create a new version of SystemInfo() for subsequent calls. To conserve&#10;      processing time at the cost of additional memory usage, re-use the same&#10;      {@link SystemInfo} object for future queries." />
      <item value="memoized" />
      <item value=" Convenience class for returning multiple objects from methods." />
      <item value="Triplet" />
      <item value="  System information. This is the main entry point to OSHI.&#10;  &lt;p&gt;&#10;  This object provides getters which instantiate the appropriate&#10;  platform-specific implementations of {@link oshi.software.os.OperatingSystem}&#10;  (software) and {@link oshi.hardware.HardwareAbstractionLayer} (hardware)." />
      <item value="  Provides constants for paths in the {@code proc} filesystem on Linux.&#10;  &lt;p&gt;&#10;  If the user desires to configure a custom {@code proc} path, it must be&#10;  declared in the OSHI configuration file or updated in the&#10;  {@link GlobalConfig} class prior to initializing this class." />
      <item value="      Updates instance variables from reading procmeminfo. While most of the&#10;      information is available in the sysinfo structure, the most accurate&#10;      calculation of MemAvailable is only available from reading this pseudo-file.&#10;      The maintainers of the Linux Kernel have indicated this location will be kept&#10;      up to date if the calculation changes: see&#10;      https:git.kernel.orgcgitlinuxkernelgittorvaldslinux.gitcommit?&#10;      id=34e431b0ae398fc54ea69ff85ec700722c9da773&#10;      &lt;p&gt;&#10;      Internally, reading procmeminfo is faster than sysinfo because it only&#10;      spends time populating the memory components of the sysinfo structure.&#10;     &#10;      @return A pair containing available and total memory in bytes" />
      <item value=" The Firmware represents the low level BIOS or equivalent." />
      <item value="  Display refers to the information regarding a video source and monitor&#10;  identified by the EDID standard." />
      <item value="  The presence of this annotation indicates that the author believes the class&#10;  is not thread-safe. The absence of this annotation does not indicate that the&#10;  class is thread-safe, instead this annotation is for cases where a naïve&#10;  assumption could be easily made that the class is thread-safe. In general, it&#10;  is a bad plan to assume a class is thread safe without good reason.&#10;  &lt;p&gt;&#10;  This annotation is intended for internal use in OSHI as a temporary&#10;  workaround until it is available in {@code jakarta.annotations}." />
      <item value="  The presence of this annotation indicates that the author believes the class&#10;  to be immutable and hence inherently thread-safe. An immutable class is one&#10;  where the state of an instance cannot be &lt;i&gt;seen&lt;i&gt; to change. As a result&#10;  &lt;ul&gt;&#10;  &lt;li&gt;All public fields must be {@code final}&lt;li&gt;&#10;  &lt;li&gt;All public final reference fields are either {@code null} or refer to&#10;  other immutable objects&lt;li&gt;&#10;  &lt;li&gt;Constructors and methods do not publish references to any potentially&#10;  mutable internal state.&lt;li&gt;&#10;  &lt;ul&gt;&#10;  Performance optimization may mean that instances of an immutable class may&#10;  have mutable internal state. The critical point is that callers cannot tell&#10;  the difference. For example {@link String} is an immutable class, despite&#10;  having an internal int that is non-final but used as a cache for&#10;  {@link StringhashCode()}.&#10;  &lt;p&gt;&#10;  Immutable objects are inherently thread-safe; they may be passed between&#10;  threads or published without synchronization.&#10;  &lt;p&gt;&#10;  This annotation is intended for internal use in OSHI as a temporary&#10;  workaround until it is available in {@code jakarta.annotations}." />
      <item value="A custom @Configuration for the load balancer client. Can contain override @Bean definition for the pieces that make up the client.&#10;Returns:&#10;configuration classes for the load balancer client.&#10;See Also:&#10;for the defaults" />
      <item value="The name of the load balancer client, uniquely identifying a set of client resources, including a load balancer.&#10;Returns:&#10;the name of the load balancer client" />
      <item value="A Round-Robin-based implementation of ReactorServiceInstanceLoadBalancer.&#10;Author:&#10;Spencer Gibb, Olga Maciaszek-Sharma" />
      <item value="A no-op implementation of ServiceInstanceListSupplier." />
      <item value="Return a builder to mutate properties of this request by wrapping it with ServerHttpRequestDecorator and returning either mutated values or delegating back to this instance." />
      <item value=" Preserve-Host header attribute name" />
      <item value="preserve the original url" />
      <item value="decode slice header" />
      <item value="Returns the input subsequence captured by the given group during the previous match operation.&#10;For a matcher m, input sequence s, and group index g, the expressions m.group(g) and s.substring(m.start(g), m.end(g)) are equivalent.&#10;Capturing groups are indexed from left to right, starting at one. Group zero denotes the entire pattern, so the expression m.group(0) is equivalent to m.group().&#10;If the match was successful but the group specified failed to match any part of the input sequence, then null is returned. Note that some groups, for example (a), match the empty string. This method will return the empty string when such a group successfully matches the empty string in the input.&#10;Params:&#10;group – The index of a capturing group in this matcher's pattern&#10;Returns:&#10;The (possibly empty) subsequence captured by the group during the previous match, or null if the group failed to match part of the input&#10;Throws:&#10;IllegalStateException – If no match has yet been attempted, or if the previous match operation failed&#10;IndexOutOfBoundsException – If there is no capturing group in the pattern with the given index" />
      <item value="sub File" />
      <item value="Writes a String to the client, without a carriage return-line feed (CRLF) character at the end.&#10;Params:&#10;s – the String to send to the client&#10;Throws:&#10;IOException – if an input or output exception occurred" />
      <item value="Creates the directory named by this abstract pathname, including any necessary but nonexistent parent directories. Note that if this operation fails it may have succeeded in creating some of the necessary parent directories.&#10;Returns:&#10;true if and only if the directory was created, along with all necessary parent directories; false otherwise&#10;Throws:&#10;SecurityException – If a security manager exists and its SecurityManager.checkRead(String) method does not permit verification of the existence of the named directory and all necessary parent directories; or if the SecurityManager.checkWrite(String) method does not permit the named directory and all necessary parent directories to be created" />
      <item value="Obtains an instance of LocalDate from the epoch day count.&#10;This returns a LocalDate with the specified epoch-day. The EPOCH_DAY is a simple incrementing count of days where day 0 is 1970-01-01. Negative numbers represent earlier days.&#10;Params:&#10;epochDay – the Epoch Day to convert, based on the epoch 1970-01-01&#10;Returns:&#10;the local date, not null&#10;Throws:&#10;DateTimeException – if the epoch day exceeds the supported date range" />
      <item value="Obtains an instance of LocalDateTime using seconds from the epoch of 1970-01-01T00:00:00Z.&#10;This allows the epoch-second field to be converted to a local date-time. This is primarily intended for low-level conversions rather than general application usage.&#10;Params:&#10;epochSecond – the number of seconds from the epoch of 1970-01-01T00:00:00Z&#10;nanoOfSecond – the nanosecond within the second, from 0 to 999,999,999&#10;offset – the zone offset, not null&#10;Returns:&#10;the local date-time, not null&#10;Throws:&#10;DateTimeException – if the result exceeds the supported range, or if the nano-of-second is invalid" />
      <item value="subfix" />
      <item value="for Each Byte Asc 0" />
      <item value="Get numElements out of the CodecOutputList and forward these through the pipeline." />
      <item value="fire Channel Read" />
      <item value="Returns:&#10;true if the processor wants to continue the loop and handle the next byte in the buffer. false if the processor wants to stop handling bytes and abort the loop." />
      <item value=" In case of decoding a request we will just continue processing and header validation&#10;                     is done in the DefaultHttpHeaders implementation.&#10;                    &#10;                     In the case of decoding a response we will &quot;skip&quot; the whitespace." />
      <item value="       No whitespace is allowed between the header field-name and colon. In&#10;             the past, differences in the handling of such whitespace have led to&#10;             security vulnerabilities in request routing and response handling. A&#10;             server MUST reject any received request message that contains&#10;             whitespace between a header field-name and colon with a response code&#10;             of 400 (Bad Request). A proxy MUST remove any such whitespace from a&#10;             response message before forwarding the message downstream." />
      <item value="We return here, this forces decode to be called again where we will decode the content" />
      <item value="Iterates over the readable bytes of this buffer with the specified processor in ascending order.&#10;Returns:&#10;-1 if the processor iterated to or beyond the end of the readable bytes. The last-visited index If the ByteProcessor.process(byte) returned false." />
      <item value="colon" />
      <item value="Strip Prefix" />
      <item value="combine Predicates" />
      <item value="Returns a view of the portion of this map whose keys are greater than or equal to fromKey. The returned map is backed by this map, so changes in the returned map are reflected in this map, and vice-versa. The returned map supports all optional map operations that this map supports.&#10;The returned map will throw an IllegalArgumentException on an attempt to insert a key outside its range.&#10;Params:&#10;fromKey – low endpoint (inclusive) of the keys in the returned map&#10;Returns:&#10;a view of the portion of this map whose keys are greater than or equal to fromKey&#10;Throws:&#10;ClassCastException – if fromKey is not compatible with this map's comparator (or, if the map has no comparator, if fromKey does not implement Comparable). Implementations may, but are not required to, throw this exception if fromKey cannot be compared to keys currently in the map.&#10;NullPointerException – if fromKey is null and this map does not permit null keys&#10;IllegalArgumentException – if this map itself has a restricted range, and fromKey lies outside the bounds of the range" />
      <item value="The prefix of the properties that are valid to bind to this object. Synonym for prefix(). A valid prefix is defined by one or more words separated with dots (e.g. &quot;acme.system.feature&quot;).&#10;Returns:&#10;the prefix of the properties to bind" />
      <item value="validate" />
      <item value="Initialize the given BeanWrapper with the custom editors registered with this factory. To be called for BeanWrappers that will create and populate bean instances.&#10;The default implementation delegates to registerCustomEditors. Can be overridden in subclasses.&#10;Params:&#10;bw – the BeanWrapper to initialize" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="747" />
        <entry key="ENGLISH" value="748" />
        <entry key="ESTONIAN" value="1" />
        <entry key="GERMAN" value="4" />
        <entry key="FRENCH" value="4" />
        <entry key="FILIPINO" value="5" />
        <entry key="DUTCH" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="SCOTS_GAELIC" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="7" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1664248295077" />
  </component>
  <component name="Settings">
    <option name="autoReplace" value="true" />
    <option name="foldOriginal" value="true" />
    <option name="keepFormat" value="true" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Cambria" />
    <option name="primaryFontFamily" value="DialogInput" />
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="512e876ddd7d2c77" />
      </youdao-translate>
    </option>
  </component>
</application>