<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="594" />
    <option name="newTranslationDialogX" value="2703" />
    <option name="newTranslationDialogY" value="454" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Indicates" />
      <item value="Network interfaces implementation" />
      <item value="Network IF" />
      <item value="Processor Identifier" />
      <item value="   Maximum frequeny (in Hz), of the logical processors on this CPU." />
      <item value="Central Processor" />
      <item value="  This class represents the entire Central Processing Unit (CPU) of a computer&#10;  system, which may contain one or more physical packages (sockets), one or&#10;  more physical processors (cores), and one or more logical processors (what&#10;  the Operating System sees, which may include hyperthreaded cores.)" />
      <item value="ticks" />
      <item value="query Cpu Manufacturer" />
      <item value="pc Manufacturer" />
      <item value="manufacturer" />
      <item value="Local Date Time Deserializer" />
      <item value="Release" />
      <item value="publish" />
      <item value="发布" />
      <item value="declined" />
      <item value="attractively" />
      <item value="Aggregator" />
      <item value="incorrectly" />
      <item value="check Table Ref" />
      <item value="ext Algorithm" />
      <item value="assembly" />
      <item value="malformed" />
      <item value="threaten" />
      <item value="It is highly recommended to fix these problems because they threaten the stability of your build." />
      <item value="kept" />
      <item value="is Ext Algorithm" />
      <item value="phase" />
      <item value="terminater" />
      <item value="surefire" />
      <item value="Hamcrest" />
      <item value="Under consideration, prevent affecting core tables" />
      <item value="obtain" />
      <item value="Communications Exception" />
      <item value="introspect" />
      <item value="Disposable Bean" />
      <item value="Smart Initializing Singleton" />
      <item value="&#9;  Invoked right at the end of the singleton pre-instantiation phase,&#10;&#9;  with a guarantee that all regular singleton beans have been created&#10;&#9;  already. {@link ListableBeanFactorygetBeansOfType} calls within&#10;&#9;  this method won't trigger accidental side effects during bootstrap.&#10;&#9;  &lt;p&gt;&lt;b&gt;NOTE:&lt;b&gt; This callback won't be triggered for singleton beans&#10;&#9;  lazily initialized on demand after {@link BeanFactory} bootstrap,&#10;&#9;  and not for any other bean scope either. Carefully use it for beans&#10;&#9;  with the intended bootstrap semantics only." />
      <item value="Thread starvation or clock leap detected" />
      <item value="starvation" />
      <item value="capacity" />
      <item value="      Flips this buffer.  The limit is set to the current position and then&#10;      the position is set to zero.  If the mark is defined then it is&#10;      discarded.&#10;     &#10;      &lt;p&gt; After a sequence of channel-read or &lt;i&gt;put&lt;i&gt; operations, invoke&#10;      this method to prepare for a sequence of channel-write or relative&#10;      &lt;i&gt;get&lt;i&gt; operations.  For example:&#10;     &#10;      &lt;blockquote&gt;&lt;pre&gt;&#10;      buf.put(magic);     Prepend header&#10;      in.read(buf);       Read data into rest of buffer&#10;      buf.flip();         Flip buffer&#10;      out.write(buf);     Write header + data to channel&lt;pre&gt;&lt;blockquote&gt;&#10;     &#10;      &lt;p&gt; This method is often used in conjunction with the {@link&#10;      java.nio.ByteBuffercompact compact} method when transferring data from&#10;      one place to another.  &lt;p&gt;" />
      <item value="flip" />
      <item value="condition" />
      <item value="select Label Column" />
      <item value="Lable" />
      <item value="assistent" />
      <item value="Batch Insert Or Update" />
      <item value="Batchinsert Or Update" />
      <item value="constant" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="747" />
        <entry key="ENGLISH" value="748" />
        <entry key="ESTONIAN" value="1" />
        <entry key="GERMAN" value="4" />
        <entry key="FRENCH" value="4" />
        <entry key="FILIPINO" value="5" />
        <entry key="DUTCH" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="SCOTS_GAELIC" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="7" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1670822899598" />
  </component>
  <component name="Settings">
    <option name="autoReplace" value="true" />
    <option name="foldOriginal" value="true" />
    <option name="keepFormat" value="true" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Cambria" />
    <option name="primaryFontFamily" value="DialogInput" />
    <option name="translateDocumentation" value="true" />
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="512e876ddd7d2c77" />
      </youdao-translate>
    </option>
  </component>
</application>